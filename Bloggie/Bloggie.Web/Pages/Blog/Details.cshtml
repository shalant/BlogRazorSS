@page "/blog/{urlHandle}"
@model Bloggie.Web.Pages.Blog.DetailsModel

@using Microsoft.AspNetCore.Identity
@inject UserManager<IdentityUser> userManager

@{
    ViewData["Title"] = Model.BlogPost.PageTitle;
}

<div class="container my-5">
    <div class="row justify-content-center">
        <div class="col-12 col-lg-6">
            @if (Model.BlogPost != null)
            {
                <h1 class="mb-3">@Model.BlogPost.Heading</h1>

                <div class="d-flex justify-content-between mb-3">
                    <span class="text-secondary">@Model.BlogPost.Author</span>
                    <span class="text-secondary">@Model.BlogPost.PublishedDate.ToShortDateString()</span>
                </div>

                <div class="mb-3">
                    <a id="btnLike" style="cursor:pointer">
                        <i class="bi bi-hand-thumbs-up"></i>
                    </a>
                    <span> @Model.TotalLikes likes</span>
                </div>

                <div class="mb-3">
                    @if (Model.BlogPost.Tags != null)
                    {
                        foreach (var tag in Model.BlogPost.Tags)
                        {
                            <a href="/tags/@tag.Name">
                                <span class="badge bg-dark">@tag.Name</span>

                            </a>
                        }
                    }
                </div>

                <img src="@Model.BlogPost.FeaturedImageUrl" class="d-block img-fluid mb-3" />

                <div class="mb-3 blog-details">
                    @Html.Raw(Model.BlogPost.Content)
                </div>
            }
            else
            {
                <h2>Blog post not found!</h2>
            }
        </div>
    </div>
</div>

@section Scripts {
    <script>
        const btnLike = document.getElementById('btnLike');

        async function addLikeForBlog() {

            fetch('/api/blogpostlike/add', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'Accept': '*/*'
                },
                body: JSON.stringify({ blogPostId: '@Model.BlogPost.Id', userId: '@userManager.GetUserId(User)' })
            })
                .then(console.log('request finished'))
        }

        btnLike.addEventListener('click', addLikeForBlog);
    </script>
}